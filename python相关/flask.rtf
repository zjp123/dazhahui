{\rtf1\ansi\ansicpg936\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red245\green245\blue245;\red95\green124\blue3;
}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c96863\c96863\c96863;\cssrgb\c44314\c54902\c0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww19340\viewh11780\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 Session
\f1 \'b5\'c4\'b4\'e6\'b4\'a2\'b7\'bd\'ca\'bd\'c6\'e4\'ca\'b5\'ca\'c7\'a3\'ac\'d2\'bb\'cc\'f5
\f0 sessionid
\f1 \'a3\'ac\'b4\'e6\'b4\'a2\'b6\'e0\'b8\'f6\'d6\'b5\'b1\'c8\'c8\'e7\'a3\'basessionid:[\{key, value\}, \{name, value\}]\
\
Xss\'b9\'a5\'bb\'f7\'ca\'c7\'d6\'b8\'d4\'da\'cd\'f8\'d2\'b3\'d6\'d0\'a3\'ac\'b2\'e5\'c8\'eb\'d2\'bb\'b6\'ce\'b6\'f1\'d2\'e2js\'bd\'c5\'b1\'be\'a3\'ac\'bd\'e2\'be\'f6\'a3\'ba\'b0\'d1\'bd\'c5\'b1\'be\'d7\'aa\'d2\'e5\'ce\'aa\'c6\'d5\'cd\'a8\'d7\'d6\'b7\'fb\'b4\'ae\
\
\'d2\'bb\'cc\'a8nginx\'b7\'fe\'ce\'f1\'c6\'f7\'a3\'ac\'b2\'ee\'b2\'bb\'b6\'e0\'bf\'c9\'d2\'d4\'b4\'a6\'c0\'ed\'a3\'ac\'c1\'b4\'bd\'d3\'b7\'c7\'bb\'ee\'d4\'be\'ba\'cd\'bb\'ee\'d4\'be\'c1\'b4\'bd\'d3\'d7\'dc\'b9\'b220\'cd\'f2\'b8\'f6\'a3\'acdjanog\'b7\'fe\'ce\'f1\'c6\'f7\'a3\'ac\'b2\'ee\'b2\'bb\'b6\'e0\'ca\'c72000\'b8\'f6\'a3\'ac\'b2\'a2\'c7\'d2\'b7\'fe\'ce\'f1\'c6\'f7\'d2\'bb\'b0\'e3\'ca\'c7\'d7\'a8\'bb\'fa\'d7\'a8\'d3\'c3\'a3\'ac\'ca\'fd\'be\'dd\'bf\'e2\'be\'cd\'ca\'c7\'ca\'fd\'be\'dd\'bf\'e2\'b5\'c4\'b7\'fe\'ce\'f1\'c6\'f7\'a3\'acweb\'b7\'fe\'ce\'f1\'c6\'f7\'be\'cd\'ca\'c7web\'b7\'fe\'ce\'f1\'c6\'f7\'a1\'a3\
\
nginx\'bf\'c9\'d2\'d4\'bf\'aa\'b5\'c4\'bd\'f8\'b3\'cc\'ca\'fd\'d2\'bb\'b0\'e3\'ba\'cdcpu\'b5\'c4\'b8\'f6\'ca\'fd\'b3\'c91.5\'b5\'bd2\'b1\'b6\'b5\'c4\'b9\'d8\'cf\'b5\
\
json\'be\'cd\'ca\'c7\'d7\'d6\'b7\'fb\'b4\'ae\'a1\'a3\
\
width\'c9\'cf\'cf\'c2\'ce\'c4\'cf\'e0\'b5\'b1\'d3\'da try-catch-finally\
\
python2\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'d4\'da\'ca\'b9\'d3\'c3\'d6\'d0\'ce\'c4\'b5\'c4\'ca\'b1\'ba\'f2\'bc\'c7\'b5\'c3\'bc\'d3\'c9\'cfu\'a1\'b0xxx\'a1\'b1\
\
flask\'b5\'c4form\'b1\'ed\'b5\'a5\'d3\'eb\'ba\'ea\'a3\'acflask\'d6\'d0\'d3\'d0\'d2\'bb\'d0\'a9\'cc\'d8\'ca\'e2\'b5\'c4\'b1\'e4\'c1\'bf\'b2\'bb\'d0\'e8\'d2\'aa\'cd\'a8\'b9\'fd\'c4\'a3\'b0\'e5\'b4\'ab\'b5\'dd\'a3\'ac\'be\'cd\'bf\'c9\'d2\'d4\'d4\'da\'c4\'a3\'b0\'e5\'d6\'d0\'d6\'b1\'bd\'d3\'ca\'b9\'d3\'c3\'a3\'ac\'c9\'c1\'cf\'d6\'ca\'c7\'d4\'da\'b5\'da\'d2\'bb\'b4\'ce\'b7\'c3\'ce\'ca\'b5\'c4\'ca\'b1\'ba\'f2\'b3\'f6\'cf\'d6\'b5\'c4\'cf\'fb\'cf\'a2\'a3\'ac\'cd\'a8\'b9\'fdsession\'bb\'fa\'d6\'c6\'b4\'e6\'b4\'a2\
\
Python3\'bb\'b7\'be\'b3\'ca\'b9\'d3\'c3\'b5\'c4\'ca\'c7pymysql  python2\'ca\'b9\'d3\'c3\'b5\'c4\'ca\'c7Mysql-python\
\
\'d4\'daflask\'d6\'d0\'a3\'ac\'c8\'e7\'b9\'fb\'ca\'c7\'d4\'dapython2\'bb\'b7\'be\'b3\'d6\'d0\'a3\'ac\'b3\'fd\'c1\'cb\'d2\'aa\'cf\'c2\'d4\'d8flask-sqlalcheme \'d6\'ae\'cd\'e2\'a3\'ac\'bb\'b9\'d2\'aa\'cf\'c2\'d4\'d8Mysql-python(\'ca\'fd\'be\'dd\'bf\'e2\'c7\'fd\'b6\'af),\'bb\'f2\'d5\'df\'cf\'c2\'d4\'d8\'a3\'acflask-mysqldb\
\
\'b1\'ed\'b5\'c4\'c3\'fc\'c3\'fb\'a3\'ba\'ca\'fd\'be\'dd\'bf\'e2\'cb\'f5\'d0\'b4_\'b1\'ed\'c3\'fb\
\
\'b2\'e9\'d1\'af\'d3\'ef\'b7\'a8\'a3\'ba\
User.query.all() \'cb\'f9\'d3\'d0\'ca\'fd\'be\'dd\
User.query.first() \'b5\'da\'d2\'bb\'cc\'f5\
User.query.get(2) \'b5\'da\'b6\'fe\'cc\'f5\
\
\'b2\'e9\'d1\'af\'d6\'ae\'c7\'b0\'bf\'c9\'bd\'f8\'d0\'d0\'b9\'fd\'c2\'cb\'c9\'b8\'d1\'a1\
User.query.filter_by(name=wang, id=2).first()  \'b2\'e9\'b2\'bb\'b5\'bd\'ca\'c7None\
User.query.filter(User.name==wang, id=1).first() \'c1\'bd\'d6\'d6\'b7\'bd\'ca\'bd\'b2\'bb\'d2\'bb\'d1\'f9\
Import sqlalchemy import or_\
User.query.filter(or_(User.name==wang, id=1)).all() \
User.query.offset(2).all() \'cc\'f8\'b9\'fd\'bc\'b8\'cc\'f5  \'d7\'f6\'b7\'d6\'d2\'b3\'ca\'b1\'bf\'c9\'d3\'c3\
User.query.offset(2).limit(2).all() \'cc\'f8\'b9\'fd\'bc\'b8\'cc\'f5  \'d7\'f6\'b7\'d6\'d2\'b3\'ca\'b1\'bf\'c9\'d3\'c3\
\
\'c5\'c5\'d0\'f2\'a3\'ba\
\
User.query.order_by(User.id.desc()).all()\
\
\'b7\'d6\'d7\'e9\'a3\'ba\
db.session.query(User.role_id, func.count(User.role_id)).group_by(User.role_id).all()\
\
\'b9\'d8\'c1\'aa\'b2\'e9\'d1\'af\'a3\'ba\
role = Role.query.get(1)\
role.users\
\
\
\'d0\'de\'b8\'c4\'a3\'ba\
1.\
\pard\pardeftab720\sl320\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 user = User.query.first()\
user.name = \'91laowang\'92\
db.session.add(user)\
db.session.commit()\
\
2.\
User.query.filter_by(name=\cf4 \strokec4 'zhang'\cf2 \strokec2 ).update(\{\cf4 \strokec4 'name'\cf2 \strokec2 :\cf4 \strokec4 'li'\cf2 \strokec2 \})\
User.query.filter_by(name=\cf4 \strokec4 'zhang'\cf2 \strokec2 ).update(\{\cf4 \strokec4 'name'\cf2 \strokec2 :\cf4 \strokec4 'li'\cf2 \strokec2 \})
\fs32 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\'c9\'be\'b3\'fd\'a3\'ba\
\pard\pardeftab720\sl320\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 user = User.query.first()\
db.session.delete(user)\
db.session.commit()
\fs32 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
request.get_json()\'b0\'d1json\'d7\'aa\'ce\'aa\'d7\'d6\'b5\'e4\
\
\'cd\'a8\'b9\'fd\'c3\'fc\'c1\'ee\'b2\'d9\'d7\'f7\'ca\'fd\'be\'dd\'bf\'e2\
\pard\pardeftab720\sl320\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #
\f1 \'d5\'e2\'b8\'f6\'c3\'fc\'c1\'ee\'bb\'e1\'b4\'b4\'bd\'a8
\f2 migrations
\f1 \'ce\'c4\'bc\'fe\'bc\'d0\'a3\'ac\'cb\'f9\'d3\'d0\'c7\'a8\'d2\'c6\'ce\'c4\'bc\'fe\'b6\'bc\'b7\'c5\'d4\'da\'c0\'ef\'c3\'e6\'a1\'a3
\f2 \
python database.py db init  
\f1 \'b3\'f5\'ca\'bc\'bb\'af
\f2   
\f1 \'ba\'f3\'c3\'e6\'be\'cd\'b2\'bb\'d3\'c3\'d4\'d9\'d6\'b4\'d0\'d0\'c1\'cb
\f2\fs32 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #
\f1 \'b4\'b4\'bd\'a8\'d7\'d4\'b6\'af\'c7\'a8\'d2\'c6\'bd\'c5\'b1\'be
\f2 \
python database.py db migrate -m 'initial migration'
\fs32 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\'b8\'fc\'d0\'c2\'ca\'fd\'be\'dd\'bf\'e2\
\pard\pardeftab720\sl320\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 python database.py db upgrade\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
\pard\pardeftab720\sl460\sa306\partightenfactor0

\b\fs36 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'bb\'d8\'cd\'cb\'ca\'fd\'be\'dd\'bf\'e2
\f3 \
\pard\pardeftab720\sl360\sa272\partightenfactor0

\f1\b0\fs32 \cf2 \'bb\'d8\'cd\'cb\'ca\'fd\'be\'dd\'bf\'e2\'ca\'b1\'a3\'ac\'d0\'e8\'d2\'aa\'d6\'b8\'b6\'a8\'bb\'d8\'cd\'cb\'b0\'e6\'b1\'be\'ba\'c5\'a3\'ac\'d3\'c9\'d3\'da\'b0\'e6\'b1\'be\'ba\'c5\'ca\'c7\'cb\'e6\'bb\'fa\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'ce\'aa\'b1\'dc\'c3\'e2\'b3\'f6\'b4\'ed\'a3\'ac\'bd\'a8\'d2\'e9\'cf\'c8\'ca\'b9\'d3\'c3
\f3\b python database.py db history
\f1\b0 \'c3\'fc\'c1\'ee\'b2\'e9\'bf\'b4\'c0\'fa\'ca\'b7\'b0\'e6\'b1\'be\'b5\'c4\'be\'df\'cc\'e5\'b0\'e6\'b1\'be\'ba\'c5\'a3\'ac\'c8\'bb\'ba\'f3\'b8\'b4\'d6\'c6\'be\'df\'cc\'e5\'b0\'e6\'b1\'be\'ba\'c5\'d6\'b4\'d0\'d0\'bb\'d8\'cd\'cb\'a1\'a3
\f3 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb3 python database.py db downgrade 
\f1 \'b0\'e6\'b1\'be\'ba\'c5
\f2\fs32 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
\'c0\'b6\'cd\'bc\'b8\'c5\'c4\'ee\'a3\'ba\
\'ca\'c7\'d2\'bb\'b8\'f6\'d0\'a1\'c4\'a3\'bf\'e9\'b5\'c4\'b3\'e9\'cf\'f3\'a3\'ac\'ca\'c7\'bd\'e2\'be\'f6\'c4\'a3\'bf\'e9\'d3\'eb\'c4\'a3\'bf\'e9\'cf\'e0\'bb\'a5\'d2\'fd\'d3\'c3\'ca\'b1\'b5\'c4\'ce\'ca\'cc\'e2\'a3\'ac\'c6\'e4\'ca\'b5\'be\'cd\'ca\'c7\'d7\'e9\'bc\'fe\'bb\'af\'cb\'bc\'cf\'eb\'a3\'ac\'bd\'e2\'be\'f6\'d6\'f7\'b3\'cc\'d0\'f2\'d3\'eb\'d7\'d3\'c4\'a3\'bf\'e9\'d6\'ae\'bc\'e4\'b5\'c4\'f1\'ee\'ba\'cf\'b6\'c8\
\
\'a1\'b0.\'a1\'b1\'be\'cd\'b4\'fa\'b1\'ed\'b5\'b1\'c7\'b0\'b0\'fc\'c4\'a3\'bf\'e9\
\
Python\'d6\'d0\'b5\'b1\'b5\'bc\'c8\'eb\'d2\'bb\'b8\'f6\'b0\'fc\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'bb\'e1\'c4\'ac\'c8\'cf\'d6\'b4\'d0\'d0\'b0\'fc\'d6\'d0\'b5\'c4__init__.py\'ce\'c4\'bc\'fe\'a3\'ac\'c6\'e4\'cb\'fb\'ce\'c4\'bc\'fe\'b2\'bb\'d6\'b4\'d0\'d0\'a3\'ac\'b3\'fd\'b7\'c7\'d4\'da__init__.py\'ce\'c4\'bc\'fe\'d6\'d0\'c9\'e6\'bc\'b0\'b5\'bd\
\
\
\'c0\'b6\'cd\'bc\'c4\'bf\'c2\'bc\'d6\'d0\'b5\'c4\'c4\'a3\'b0\'e5\'ce\'c4\'bc\'fe\'a3\'ac\'c8\'e7\'b9\'fb\'b8\'fa\'d7\'dc\'b5\'c4\'c4\'a3\'b0\'e5\'ce\'c4\'bc\'fe\'c0\'ef\'c3\'e6\'b5\'c4\'ce\'c4\'bc\'fe\'c3\'fb\'cf\'e0\'cd\'ac\'a3\'ac\'c4\'c7\'c3\'b4\'d2\'d4\'d7\'dc\'b5\'c4\'ce\'aa\'d7\'bc\
\
\
\'b5\'a5\'d4\'aa\'b2\'e2\'ca\'d4\'a3\'ba\
\
assert \'b6\'cf\'d1\'d4  \'ba\'f3\'c3\'e6\'b8\'fa\'d2\'bb\'b8\'f6\'b1\'ed\'b4\'ef\'ca\'bd  \'c8\'e7\'b9\'fb\'b1\'ed\'b4\'ef\'ca\'bd\'b7\'b5\'bb\'d8\'d5\'e6\'a3\'ac\'c4\'c7\'c3\'b4\'b3\'cc\'d0\'f2\'bc\'cc\'d0\'f8\'d6\'b4\'d0\'d0\'a3\'ac\'c8\'e7\'b9\'fb\'b7\'b5\'bb\'d8\'bc\'d9\'a3\'ac\'c4\'c7\'c3\'b4\'bb\'e1\'c5\'d7\'b3\'f6\'d2\'bb\'b8\'f6\'d2\'ec\'b3\'a3\'a3\'ac\
\
\
all([a, b, ags])\
\
\pard\pardeftab720\sl320\partightenfactor0

\f2\fs27\fsmilli13600 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #coding=utf-8\
import unittest\
from Flask_day04 import app #
\f1 \'d0\'e8\'d2\'aa\'b2\'e2\'ca\'d4\'b5\'c4\'b3\'cc\'d0\'f2\'cb\'f9\'d4\'da\'ce\'c4\'bc\'fe
\f2 \
class TestCase(unittest.TestCase):\
    # 
\f1 \'b4\'b4\'bd\'a8\'b2\'e2\'ca\'d4\'bb\'b7\'be\'b3\'a3\'ac\'d4\'da\'b2\'e2\'ca\'d4\'b4\'fa\'c2\'eb\'d6\'b4\'d0\'d0\'c7\'b0\'d6\'b4\'d0\'d0  \'b3\'f5\'ca\'bc\'bb\'af\'b5\'c4\'b6\'ab\'ce\'f7
\f2 \
    def setUp(self):\
        self.app = app\
        # 
\f1 \'bc\'a4\'bb\'ee\'b2\'e2\'ca\'d4\'b1\'ea\'d6\'be
\f2 \
        app.config['TESTING'] = True\
        self.client = self.app.test_client()\
\
    # 
\f1 \'d4\'da\'b2\'e2\'ca\'d4\'b4\'fa\'c2\'eb\'d6\'b4\'d0\'d0\'cd\'ea\'b3\'c9\'ba\'f3\'d6\'b4\'d0\'d0
\f2 \
    def tearDown(self):\
        pass\
\
    # 
\f1 \'b2\'e2\'ca\'d4\'b4\'fa\'c2\'eb \'b7\'bd\'b7\'a8\'c3\'fb\'b1\'d8\'d0\'eb\'d2\'d4test_ \'bf\'aa\'cd\'b7
\f2 \
    def test_email(self):\
        resp = self.client.get('/')\
        # rep = self.clent.post(\'91/\'92, data=\{\})\
        print resp.data\
        self.assertEqual(resp.data,'Sent
\f1 \'a1\'a1
\f2 Succeed')
\fs32 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\pard\pardeftab720\sl460\sa306\partightenfactor0

\b\fs36 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'ca\'fd\'be\'dd\'bf\'e2\'b2\'e2\'ca\'d4\'a3\'ba
\f3 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\b0\fs27\fsmilli13600 \cf2 \cb3 #coding=utf-8\
import unittest\
from author_book import *\
\
#
\f1 \'d7\'d4\'b6\'a8\'d2\'e5\'b2\'e2\'ca\'d4\'c0\'e0\'a3\'ac
\f2 setUp
\f1 \'b7\'bd\'b7\'a8\'ba\'cd
\f2 tearDown
\f1 \'b7\'bd\'b7\'a8\'bb\'e1\'b7\'d6\'b1\'f0\'d4\'da\'b2\'e2\'ca\'d4\'c7\'b0\'ba\'f3\'d6\'b4\'d0\'d0\'a1\'a3\'d2\'d4
\f2 test_
\f1 \'bf\'aa\'cd\'b7\'b5\'c4\'ba\'af\'ca\'fd\'be\'cd\'ca\'c7\'be\'df\'cc\'e5\'b5\'c4\'b2\'e2\'ca\'d4\'b4\'fa\'c2\'eb\'a1\'a3
\f2 \
\
class DatabaseTest(unittest.TestCase):\
    def setUp(self):\
        app.config['TESTING'] = True\
        app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://root:mysql@localhost/test0'\
        self.app = app\
        db.create_all()\
\
	#
\f1 \'b3\'cc\'d0\'f2\'d7\'ee\'ba\'f3\'d6\'b4\'d0\'d0\'a3\'ac\'d7\'f6\'d2\'bb\'d0\'a9\'c7\'e5\'c0\'ed\'b2\'d9\'d7\'f7
\f2 \
    def tearDown(self):\
        db.session.remove()\
        db.drop_all()\
\
    #
\f1 \'b2\'e2\'ca\'d4\'b4\'fa\'c2\'eb
\f2 \
    def test_append_data(self):\
        au = Author(name='itcast')\
        bk = Book(info='python')\
        db.session.add_all([au,bk])\
        db.session.commit()\
        author = Author.query.filter_by(name='itcast').first()\
        book = Book.query.filter_by(info='python').first()\
        #
\f1 \'b6\'cf\'d1\'d4\'ca\'fd\'be\'dd\'b4\'e6\'d4\'da
\f2 \
        self.assertIsNotNone(author)\
        self.assertIsNotNone(book)
\fs32 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\fs28 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\'d2\'bb\'b8\'f6\'b3\'cc\'d0\'f2\'bf\'c9\'d2\'d4\'d4\'da\'d2\'bb\'cc\'a8\'bb\'fa\'c6\'f7\'c9\'cf\'b2\'bb\'cd\'ac\'b5\'c4\'b6\'cb\'bf\'da\'c9\'cf\'d6\'b4\'d0\'d0\'a3\'ac\'b2\'bb\'cd\'ac\'b5\'c4\'b6\'cb\'bf\'da\'b4\'fa\'b1\'ed\'d7\'c5\'b2\'bb\'cd\'ac\'b5\'c4\'bd\'f8\'b3\'cc\'a3\'ac\'cd\'ac\'ca\'b1\'d5\'e2\'b8\'f6\'bd\'f8\'b3\'cc\'c9\'cf\'bf\'c9\'d2\'d4\'bf\'aa\'b6\'e0\'b8\'f6\'d7\'d3\'bd\'f8\'b3\'cc\
\
\
}